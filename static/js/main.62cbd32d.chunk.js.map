{"version":3,"sources":["comp/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","App","useState","isListening","setIsListening","note","setNote","savedNotes","setSavedNotes","useEffect","start","onend","console","log","stop","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","HandleListen","style","textAlign","className","maxWidth","onClick","disabled","prevState","x","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62cbd32d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Nav() {\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          Navbar\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarColor02\"\r\n          aria-controls=\"navbarColor02\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                Home\r\n                <span class=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                Features\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n          <input\r\n            class=\"form-control mr-sm-2\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n          ></input>\r\n          <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from 'react';\nimport './bootstrap.min.css';\nimport Nav from './comp/Nav';\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\n\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'en-US';\nfunction App() {\n  const [isListening, setIsListening] = useState(false);\n  const [note, setNote] = useState(null);\n  const [savedNotes, setSavedNotes] = useState([]);\n\n  useEffect(() => {\n    HandleListen();\n  }, [isListening]);\n  function HandleListen() {\n    if (isListening) {\n      mic.start();\n      mic.onend = () => {\n        console.log('mic is on');\n        mic.start();\n      };\n    } else {\n      mic.stop();\n      mic.onend = () => {\n        console.log('mic is stopping');\n      };\n    }\n    mic.onstart = () => {\n      console.log('conclusion');\n    };\n    mic.onresult = (event) => {\n      const transcript = Array.from(event.results)\n        .map((result) => result[0])\n        .map((result) => result.transcript)\n        .join('');\n      console.log(transcript);\n      setNote(transcript);\n      mic.onerror = (event) => {\n        console.log(event.error);\n      };\n    };\n  }\n\n  return (\n    <>\n      <Nav></Nav>\n      <h2 style={{ textAlign: 'center' }}>\n        <u>SPEECH TO NOTES WITH REACT</u>\n      </h2>\n      <div class=\"alert alert-success\" style={{ textAlign: 'center' }}>\n        Hit \"Start\", say what you wanna record. Once you're done, hit Stop and\n        then hit \"save note\" if you wanna save it\n      </div>\n      <h1 className=\"my-3\">Voice Notes</h1>\n      <div className=\"container\">\n        <div class=\"row\">\n          <div class=\"card border-primary mb-3\" style={{ maxWidth: '30rem' }}>\n            <div class=\"card-header\">Current Note</div>\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">\n                {' '}\n                <button\n                  onClick={() => {\n                    setSavedNotes([...savedNotes, note]);\n                    setNote('');\n                  }}\n                  type=\"button\"\n                  class=\"btn btn-primary\"\n                  disabled={!note}\n                >\n                  Save new note\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-secondary\"\n                  onClick={() => {\n                    setIsListening((prevState) => !prevState);\n                  }}\n                >\n                  {isListening ? <>Stop ðŸ”´ </> : <> Start ðŸŽ¤</>}\n                </button>\n              </h4>\n              <p class=\"card-text\"> {note}</p>\n            </div>\n          </div>\n          <div class=\"card border-secondary mb-3\" style={{ maxWidth: '40rem' }}>\n            <div class=\"card-header\">SAVED NOTES</div>\n            <div class=\"card-body\">\n              <h4 class=\"card-title\">All your notes are down below</h4>\n              <p class=\"card-text\">\n                {savedNotes.map((x) => (\n                  <li key={x}>{x}</li>\n                ))}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
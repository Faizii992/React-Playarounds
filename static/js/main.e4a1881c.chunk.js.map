{"version":3,"sources":["comp/Nav.js","screens/HomePage.js","screens/ObjectDetection.js","screens/SpeechToNote.js","screens/TextToSpeech.js","screens/Segmentation.js","screens/Ocr.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","class","to","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","title","data-container","data-placement","data-content","data-original-title","placeholder","HomePage","role","ObjectDetection","drawRect","detections","ctx","console","log","forEach","prediction","x","y","width","height","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","CanvasRef","useRef","WebcamRef","useEffect","runCoco","a","cocossd","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","data-dismiss","muted","ref","style","position","top","left","zindex","textAlign","mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","SpeechToNote","useState","isListening","setIsListening","note","setNote","savedNotes","setSavedNotes","start","onend","stop","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","HandleListen","className","maxWidth","onClick","disabled","prevState","TextToSpeech","val","setVal","rate","setRate","voiceIndex","setVoiceIndex","useSpeechSynthesis","speak","voices","cancel","speaking","supported","voice","margin","onChange","e","target","value","minHeight","for","min","max","defaultValue","step","name","option","index","voiceURI","Segmentation","webcamRef","canvasRef","runBodysegment","bodyPix","segmentPersonParts","person","coloredPartImage","canvas","marginLeft","marginRight","right","registerPlugin","FilePondPluginImagePreview","worker","createWorker","logger","m","Ocr","setText","pondRef","setOcr","File","load","loadLanguage","initialize","recognize","file","data","display","justifyContent","onremovefile","err","onaddfile","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAmHeA,MAjHf,WACE,OACE,8BACE,sBAAKC,MAAM,8CAAX,UACE,cAAC,IAAD,CAAMC,GAAG,QAAT,SACE,mBAAGD,MAAM,eAAeE,KAAK,GAA7B,oBAIF,wBACEF,MAAM,iBACNG,KAAK,SACLC,cAAY,WACZC,cAAY,iBACZC,gBAAc,gBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMR,MAAM,0BAGd,qBAAKA,MAAM,2BAA2BS,GAAG,gBAAzC,SACE,qBAAIT,MAAM,qBAAV,UASE,oBAAIA,MAAM,kBAAV,SACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,SACE,oBAAGD,MAAM,WAAWE,KAAK,IAAzB,2BAEE,sBAAMF,MAAM,UAAZ,8BAKN,oBAAIA,MAAM,kBAAV,SACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,SACE,oBAAGD,MAAM,WAAWE,KAAK,IAAzB,2BAEE,sBAAMF,MAAM,UAAZ,8BAKN,oBAAIA,MAAM,kBAAV,SACE,cAAC,IAAD,CAAMC,GAAG,OAAT,SACE,oBAAGD,MAAM,WAAWE,KAAK,IAAzB,qCAEE,sBAAMF,MAAM,UAAZ,8BAIN,oBAAIA,MAAM,kBAAV,SACE,cAAC,IAAD,CAAMC,GAAG,aAAT,SACE,oBAAGD,MAAM,WAAWE,KAAK,IAAzB,6BAEE,sBAAMF,MAAM,UAAZ,8BAIN,oBAAIA,MAAM,kBAAV,SACE,cAAC,IAAD,CAAMC,GAAG,gBAAT,SACE,oBAAGD,MAAM,WAAWE,KAAK,IAAzB,8BAEE,sBAAMF,MAAM,UAAZ,8BAIN,oBAAIA,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWE,KAAK,IAAzB,wBAKF,oBAAIF,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWE,KAAK,IAAzB,0BAMN,wBACEC,KAAK,SACLH,MAAM,oBACNU,MAAM,GACNC,iBAAe,OACfP,cAAY,UACZQ,iBAAe,OACfC,eAAa,2BACbC,sBAAoB,gBARtB,kBAYA,uBAAMd,MAAM,2BAAZ,UACE,uBACEA,MAAM,uBACNG,KAAK,OACLY,YAAY,WAEd,wBAAQf,MAAM,iCAAiCG,KAAK,SAApD,6B,QChFKa,MAxBf,WACE,OACE,8BACE,sBAAKhB,MAAM,iBAAX,UACE,oBAAIA,MAAM,YAAV,yCACA,mBAAGA,MAAM,OAAT,oDACA,oBAAIA,MAAM,SACV,kEACoC,YADpC,IACkD,OAElD,mBAAGA,MAAM,OAAT,SACE,mBACEA,MAAM,yBACNE,KAAK,8CACLe,KAAK,SAHP,wC,mECkFKC,MA1Ff,WACE,IAAMC,EAAW,SAACC,EAAYC,GAE5BC,QAAQC,IAAIH,GACZA,EAAWI,SAAQ,SAACC,GAElBH,QAAQC,IAAIE,GAFqB,kBAGHA,EAAU,KAHP,GAG1BC,EAH0B,KAGvBC,EAHuB,KAGpBC,EAHoB,KAGbC,EAHa,KAI3BC,EAAOL,EAAU,MAGjBM,EAAQC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAC5Dd,EAAIe,YAAc,IAAML,EACxBV,EAAIgB,KAAO,aAGXhB,EAAIiB,YACJjB,EAAIkB,UAAY,IAAMR,EACtBV,EAAImB,SAASV,EAAMJ,EAAGC,GACtBN,EAAIoB,KAAKf,EAAGC,EAAGC,EAAOC,GACtBR,EAAIqB,aAGFC,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,MACzBE,qBAAU,WACRC,MACC,IACH,IAAMA,EAAO,uCAAG,4BAAAC,EAAA,sEACIC,SADJ,OACRC,EADQ,OAEd5B,QAAQC,IAAI,YACZ4B,aAAY,WACVC,EAAOF,KACN,IALW,2CAAH,qDAOPE,EAAM,uCAAG,WAAOF,GAAP,mBAAAF,EAAA,yDAE2B,GAAtCH,EAAUQ,QAAQC,MAAMC,YACH,MAArBV,EAAUQ,SACkB,oBAArBR,EAAUQ,QAJN,wBAMX/B,QAAQC,IAAIsB,EAAUQ,QAAQC,MAAME,YACpClC,QAAQC,IAAIsB,EAAUQ,QAAQC,MAAM1B,OACpCiB,EAAUQ,QAAQC,MAAM1B,MAAQiB,EAAUQ,QAAQC,MAAME,WAExDX,EAAUQ,QAAQC,MAAMzB,OAASgB,EAAUQ,QAAQC,MAAMG,YACzDd,EAAUU,QAAQzB,MAAQiB,EAAUQ,QAAQC,MAAM1B,MAClDe,EAAUU,QAAQxB,OAASgB,EAAUQ,QAAQC,MAAMzB,OAC7CyB,EAAQT,EAAUQ,QAAQC,MAbrB,UAcOJ,EAAIE,OAAOE,GAdlB,QAcLI,EAdK,OAeLrC,EAAMsB,EAAUU,QAAQM,WAAW,MACzCxC,EAASuC,EAAKrC,GAhBH,4CAAH,sDAmBZ,OACE,gCACE,sBAAKrB,MAAM,wCAAX,UACE,wBAAQG,KAAK,SAASH,MAAM,QAAQ4D,eAAa,QAAjD,kBAGA,oBAAI5D,MAAM,gBAAV,qBACA,mBAAGA,MAAM,OAAT,uDAEF,cAAC,IAAD,CACE6D,OAAO,EACPC,IAAKjB,EACLkB,MAAO,CACLnC,MAAO,MACPoC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,OAAQ,OAIZ,wBACEL,IAAKnB,EACLoB,MAAO,CACLnC,MAAO,MACPoC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,OAAQ,OAGZ,oBAAIJ,MAAO,CAAEK,UAAW,UAAxB,kC,QCvFAC,EAAM,IADVC,OAAOC,mBAAqBD,OAAOE,yBAGrCH,EAAII,YAAa,EACjBJ,EAAIK,gBAAiB,EACrBL,EAAIM,KAAO,QAgGIC,MA/Ff,WAAyB,IAAD,EACgBC,oBAAS,GADzB,mBACfC,EADe,KACFC,EADE,OAEEF,mBAAS,MAFX,mBAEfG,EAFe,KAETC,EAFS,OAGcJ,mBAAS,IAHvB,mBAGfK,EAHe,KAGHC,EAHG,KAqCtB,OAhCArC,qBAAU,YAGV,WACMgC,GACFT,EAAIe,QACJf,EAAIgB,MAAQ,WACV/D,QAAQC,IAAI,aACZ8C,EAAIe,WAGNf,EAAIiB,OACJjB,EAAIgB,MAAQ,WACV/D,QAAQC,IAAI,qBAGhB8C,EAAIkB,QAAU,WACZjE,QAAQC,IAAI,eAEd8C,EAAImB,SAAW,SAACC,GACd,IAAMC,EAAaC,MAAMC,KAAKH,EAAMI,SACjCC,KAAI,SAACC,GAAD,OAAYA,EAAO,MACvBD,KAAI,SAACC,GAAD,OAAYA,EAAOL,cACvBM,KAAK,IACR1E,QAAQC,IAAImE,GACZT,EAAQS,GACRrB,EAAI4B,QAAU,SAACR,GACbnE,QAAQC,IAAIkE,EAAMS,SA1BtBC,KACC,CAACrB,IA+BF,gCACE,oBAAIf,MAAO,CAAEK,UAAW,UAAxB,SACE,6DAEF,qBAAKpE,MAAM,sBAAsB+D,MAAO,CAAEK,UAAW,UAArD,+HAIA,oBAAIgC,UAAU,OAAd,yBACA,qBAAKA,UAAU,YAAf,SACE,sBAAKpG,MAAM,MAAX,UACE,sBAAKA,MAAM,2BAA2B+D,MAAO,CAAEsC,SAAU,SAAzD,UACE,qBAAKrG,MAAM,cAAX,0BACA,sBAAKA,MAAM,YAAX,UACE,qBAAIA,MAAM,aAAV,UACG,IACD,wBACEsG,QAAS,WACPnB,EAAc,GAAD,mBAAKD,GAAL,CAAiBF,KAC9BC,EAAQ,KAEV9E,KAAK,SACLH,MAAM,kBACNuG,UAAWvB,EAPb,2BAWA,wBACE7E,KAAK,SACLH,MAAM,oBACNsG,QAAS,WACPvB,GAAe,SAACyB,GAAD,OAAgBA,MAJnC,SAOG1B,EAAc,0DAAgB,gEAGnC,oBAAG9E,MAAM,YAAT,cAAuBgF,WAG3B,sBAAKhF,MAAM,6BAA6B+D,MAAO,CAAEsC,SAAU,SAA3D,UACE,qBAAKrG,MAAM,cAAX,yBACA,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,2CACA,mBAAGA,MAAM,YAAT,SACGkF,EAAWY,KAAI,SAACpE,GAAD,OACd,6BAAaA,GAAJA,uB,SCPZ+E,MAnFf,WAAyB,IAAD,EACA5B,mBAAS,IADT,mBACf6B,EADe,KACVC,EADU,OAEE9B,mBAAS,GAFX,mBAEf+B,EAFe,KAETC,EAFS,OAIchC,mBAAS,MAJvB,mBAIfiC,EAJe,KAIHC,EAJG,OAMiCC,+BAA/CC,EANc,EAMdA,MAAoCC,GANtB,EAMPC,OANO,EAMCC,SAND,EAMWC,UANX,EAMsBH,QAEtCI,EAAQJ,EAAOJ,IAAe,KACpC,OACE,sBAAK9G,MAAM,QAAQ+D,MAAO,CAAEwD,OAAQ,SAAUnD,UAAW,UAAzD,UACE,gEACA,sBAAKpE,MAAM,wCAAX,UACE,wBAAQG,KAAK,SAASH,MAAM,QAAQ4D,eAAa,QAAjD,kBAGA,oBAAI5D,MAAM,kBAEV,gIAEuC,uBAFvC,kBAKF,qBAAKA,MAAM,YAAX,SACE,sBAAKA,MAAM,MAAX,UACE,sBAAKA,MAAM,WAAX,UACE,0BACEwH,SAAU,SAACC,GACTd,EAAOc,EAAEC,OAAOC,QAElB5D,MAAO,CAAEnC,MAAO,OAAQgG,UAAW,SACnC5H,MAAM,iBAER,wBACEsG,QAAS,WACPW,EAAM,CAAEnF,KAAM4E,EAAKE,KAAMA,EAAMU,WAEjCtH,MAAM,4BAJR,sBASF,sBAAKA,MAAM,WAAX,UACE,2BAAUA,MAAM,kBAAhB,UACE,uFACA,uBAAO6H,IAAI,eAAX,kBACA,uBACE9D,MAAO,GACP5D,KAAK,QACLH,MAAM,eACN8H,IAAI,IACJC,IAAI,IACJC,aAAa,IACbC,KAAK,MACLxH,GAAG,QACH+G,SAAU,SAAC/B,GACToB,EAAQpB,EAAMiC,OAAOC,aAI3B,kEACA,yBACElH,GAAG,QACHyH,KAAK,QACLP,MAAOb,GAAc,GACrBU,SAAU,SAAC/B,GACTsB,EAActB,EAAMiC,OAAOC,QAL/B,UAQE,wBAAQA,MAAM,GAAd,qBACCT,EAAOpB,KAAI,SAACqC,EAAQC,GAAT,OACV,wBAA8BT,MAAOS,EAArC,mBACMD,EAAOxD,KADb,cACuBwD,EAAOD,OADjBC,EAAOE,4B,SCkBrBC,MAtFf,WACE,IAAMC,EAAY3F,iBAAO,MACnB4F,EAAY5F,iBAAO,MAEnB6F,EAAc,uCAAG,4BAAAzF,EAAA,sEACH0F,MADG,OACfxF,EADe,OAGrBC,aAAY,WACVC,EAAOF,KACN,IALkB,2CAAH,qDAQdE,EAAM,uCAAG,WAAOF,GAAP,yBAAAF,EAAA,yDAEkB,qBAAtBuF,EAAUlF,SACK,OAAtBkF,EAAUlF,SAC6B,IAAvCkF,EAAUlF,QAAQC,MAAMC,WAJb,wBAMLD,EAAQiF,EAAUlF,QAAQC,MAC1BE,EAAa+E,EAAUlF,QAAQC,MAAME,WACrCC,EAAc8E,EAAUlF,QAAQC,MAAMG,YAE5C8E,EAAUlF,QAAQC,MAAM1B,MAAQ4B,EAChC+E,EAAUlF,QAAQC,MAAMzB,OAAS4B,EAGjC+E,EAAUnF,QAAQzB,MAAQ4B,EAC1BgF,EAAUnF,QAAQxB,OAAS4B,EAfhB,UAgBUP,EAAIyF,mBAAmBrF,GAhBjC,QAgBLsF,EAhBK,OAiBXtH,QAAQC,IAAIqH,GACNC,EAAmBH,IAA0BE,GACnC,IACO,EACA,EACjBE,EAASN,EAAUnF,QAEzBqF,IACEI,EACAxF,EACAuF,EARc,GAEO,EADA,OApBZ,4CAAH,sDAqCZ,OAFAJ,IAGE,qBAAKrC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CACEtC,IAAKyE,EACLxE,MAAO,CACLC,SAAU,WACV+E,WAAY,OACZC,YAAa,OACb9E,KAAM,EACN+E,MAAO,EACP7E,UAAW,SACXD,OAAQ,EACRvC,MAAO,IACPC,OAAQ,OAIZ,wBACEiC,IAAK0E,EACLzE,MAAO,CACLC,SAAU,WACV+E,WAAY,OACZC,YAAa,OACb9E,KAAM,EACN+E,MAAO,EACP7E,UAAW,SACXD,OAAQ,EACRvC,MAAO,IACPC,OAAQ,a,oDC5EpBqH,yBAAeC,KACf,IAAMC,EAASC,uBAAa,CAC1BC,OAAQ,SAACC,GAAD,OAAOjI,QAAQC,IAAIgI,MAoEdC,MAlEf,WAAgB,IAAD,EACW3E,mBAAS,IADpB,mBACN/C,EADM,KACA2H,EADA,OAGS5E,mBAAS,IAHlB,mBAGN6B,EAHM,KAGDC,EAHC,KAKT+C,GADY9G,mBACFA,oBALD,SAOE+G,EAPF,8EAOb,WAAsBC,GAAtB,iBAAA5G,EAAA,sEACQoG,EAAOS,OADf,uBAEQT,EAAOU,aAAa,OAF5B,uBAGQV,EAAOW,WAAW,OAH1B,uBAOYX,EAAOY,UAAUJ,EAAKK,MAPlC,gBAMYnI,EANZ,EAMIoI,KAAQpI,KAEV2H,EAAQ3H,GACR6E,EAAO7E,GATT,6CAPa,4BAkB0CkF,+BAA/CC,EAlBK,EAkBLA,MACR,OAnBa,EAkBEE,OAlBF,EAkBUC,SAlBV,EAkBoBC,UAlBpB,EAkB+BH,OAE1C,qBAAKlH,MAAM,OAAO+D,MAAO,CAAEoG,QAAS,OAAQC,eAAgB,UAA5D,SACE,sBAAKpK,MAAM,YAAX,UACE,sBAAKA,MAAM,qCAAX,UACE,wBAAQG,KAAK,SAASH,MAAM,QAAQ4D,eAAa,QAAjD,kBAGA,8CAA0B,IAC1B,iFAGF,sBAAK5D,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,WAAD,CACE8D,IAAK4F,EACLW,aAAc,SAACC,EAAKL,GAClBN,EAAO,KAETY,UAAW,SAACD,EAAKL,GACfN,EAAOM,QAKb,sBAAKjK,MAAM,WAAX,UACE,0BACE+D,MAAO,CAAE6D,UAAW,SACpBrB,UAAQ,EACRoB,MAAO7F,EACP9B,MAAM,iBAGR,wBACEsG,QAAS,WACPW,EAAM,CAAEnF,KAAM4E,KAEhB1G,MAAM,8BAJR,+BCzBGwK,MA1Bf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAW3J,IACrC,cAAC,IAAD,CAAO0J,KAAK,gBAAgBC,UAAW/F,IACvC,cAAC,IAAD,CAAO6F,OAAK,EAACC,KAAK,aAAaC,UAAWzJ,IAC1C,cAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAK,gBAAgBC,UAAWlE,IAC7C,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,gBAAgBC,UAAWrC,IAC7C,cAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,OAAOC,UAAWnB,IACpC,cAAC,IAAD,CACEiB,OAAK,EACLC,KAAK,iCACLC,UAAWzJ,IAEb,cAAC,IAAD,CACEuJ,OAAK,EACLC,KAAK,uBACLC,UAAW/F,UClBNgG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4a1881c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Nav() {\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <Link to=\"/home\">\r\n          <a class=\"navbar-brand\" href=\"\">\r\n            Home\r\n          </a>\r\n        </Link>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarColor02\"\r\n          aria-controls=\"navbarColor02\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            {/* <li class=\"nav-item active\">\r\n              <Link to=\"/\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Home\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li> */}\r\n            <li class=\"nav-item active\">\r\n              <Link to=\"/speechtonote\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Speech To Note\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li>\r\n\r\n            <li class=\"nav-item active\">\r\n              <Link to=\"/texttospeech\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Text to Speech\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li>\r\n\r\n            <li class=\"nav-item active\">\r\n              <Link to=\"/ocr\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Image to Text And Speech\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n              <Link to=\"/objdetect\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Object Detection\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n              <Link to=\"/segmentation\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Body Segmentation\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                Features\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-secondary\"\r\n          title=\"\"\r\n          data-container=\"body\"\r\n          data-toggle=\"popover\"\r\n          data-placement=\"left\"\r\n          data-content=\"This doesn't do anything\"\r\n          data-original-title=\"Popover Title\"\r\n        >\r\n          Left\r\n        </button>\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n          <input\r\n            class=\"form-control mr-sm-2\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n          ></input>\r\n          <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n      <div class=\"jumbotron my-3\">\r\n        <h1 class=\"display-3\">Hello! Earth to your world!</h1>\r\n        <p class=\"lead\">This is the lazy den for ya lazy mofos</p>\r\n        <hr class=\"my-4\" />\r\n        <p>\r\n          Well i hope you have a nice day. {'(LOL NOPE'} {')'}\r\n        </p>\r\n        <p class=\"lead\">\r\n          <a\r\n            class=\"btn btn-primary btn-lg\"\r\n            href=\"https://www.youtube.com/watch?v=3XqqkrJENB4\"\r\n            role=\"button\"\r\n          >\r\n            CLICK HERE AND CRY\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport Webcam from 'react-webcam';\r\nimport * as cocossd from '@tensorflow-models/coco-ssd';\r\n\r\nfunction ObjectDetection() {\r\n  const drawRect = (detections, ctx) => {\r\n    // Loop through each prediction\r\n    console.log(detections);\r\n    detections.forEach((prediction) => {\r\n      // Extract boxes and classes\r\n      console.log(prediction);\r\n      const [x, y, width, height] = prediction['bbox'];\r\n      const text = prediction['class'];\r\n\r\n      // Set styling\r\n      const color = Math.floor(Math.random() * 16777215).toString(16);\r\n      ctx.strokeStyle = '#' + color;\r\n      ctx.font = '28px Arial';\r\n\r\n      // Draw rectangles and text\r\n      ctx.beginPath();\r\n      ctx.fillStyle = '#' + color;\r\n      ctx.fillText(text, x, y);\r\n      ctx.rect(x, y, width, height);\r\n      ctx.stroke();\r\n    });\r\n  };\r\n  const CanvasRef = useRef(null);\r\n  const WebcamRef = useRef(null);\r\n  useEffect(() => {\r\n    runCoco();\r\n  }, []);\r\n  const runCoco = async () => {\r\n    const net = await cocossd.load();\r\n    console.log('detected');\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n  const detect = async (net) => {\r\n    if (\r\n      WebcamRef.current.video.readyState == 4 &&\r\n      WebcamRef.current != null &&\r\n      typeof WebcamRef.current != 'undefined'\r\n    ) {\r\n      console.log(WebcamRef.current.video.videoWidth);\r\n      console.log(WebcamRef.current.video.width);\r\n      WebcamRef.current.video.width = WebcamRef.current.video.videoWidth;\r\n\r\n      WebcamRef.current.video.height = WebcamRef.current.video.videoHeight;\r\n      CanvasRef.current.width = WebcamRef.current.video.width;\r\n      CanvasRef.current.height = WebcamRef.current.video.height;\r\n      const video = WebcamRef.current.video;\r\n      const obj = await net.detect(video);\r\n      const ctx = CanvasRef.current.getContext('2d');\r\n      drawRect(obj, ctx);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div class=\"alert alert-dismissible alert-warning\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\r\n          &times;\r\n        </button>\r\n        <h4 class=\"alert-heading\">Oh yus!</h4>\r\n        <p class=\"mb-0\">Let's put a smile on that pretty face!</p>\r\n      </div>\r\n      <Webcam\r\n        muted={true}\r\n        ref={WebcamRef}\r\n        style={{\r\n          width: '50%',\r\n          position: 'absolute',\r\n          top: '25%',\r\n          left: '20%',\r\n          zindex: '8',\r\n        }}\r\n      ></Webcam>\r\n\r\n      <canvas\r\n        ref={CanvasRef}\r\n        style={{\r\n          width: '50%',\r\n          position: 'absolute',\r\n          top: '25%',\r\n          left: '20%',\r\n          zindex: '7',\r\n        }}\r\n      ></canvas>\r\n      <h3 style={{ textAlign: 'center' }}>Object Detection</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ObjectDetection;\r\n","import React, { useState, useEffect } from 'react';\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst mic = new SpeechRecognition();\r\n\r\nmic.continuous = true;\r\nmic.interimResults = true;\r\nmic.lang = 'en-US';\r\nfunction SpeechToNote() {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [note, setNote] = useState(null);\r\n  const [savedNotes, setSavedNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    HandleListen();\r\n  }, [isListening]);\r\n  function HandleListen() {\r\n    if (isListening) {\r\n      mic.start();\r\n      mic.onend = () => {\r\n        console.log('mic is on');\r\n        mic.start();\r\n      };\r\n    } else {\r\n      mic.stop();\r\n      mic.onend = () => {\r\n        console.log('mic is stopping');\r\n      };\r\n    }\r\n    mic.onstart = () => {\r\n      console.log('conclusion');\r\n    };\r\n    mic.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map((result) => result[0])\r\n        .map((result) => result.transcript)\r\n        .join('');\r\n      console.log(transcript);\r\n      setNote(transcript);\r\n      mic.onerror = (event) => {\r\n        console.log(event.error);\r\n      };\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: 'center' }}>\r\n        <u>SPEECH TO NOTES WITH REACT</u>\r\n      </h2>\r\n      <div class=\"alert alert-success\" style={{ textAlign: 'center' }}>\r\n        Hit \"Start\", say what you wanna record. Once you're done, hit Stop and\r\n        then hit \"save note\" if you wanna save it\r\n      </div>\r\n      <h1 className=\"my-3\">Voice Notes</h1>\r\n      <div className=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"card border-primary mb-3\" style={{ maxWidth: '30rem' }}>\r\n            <div class=\"card-header\">Current Note</div>\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">\r\n                {' '}\r\n                <button\r\n                  onClick={() => {\r\n                    setSavedNotes([...savedNotes, note]);\r\n                    setNote('');\r\n                  }}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary\"\r\n                  disabled={!note}\r\n                >\r\n                  Save new note\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setIsListening((prevState) => !prevState);\r\n                  }}\r\n                >\r\n                  {isListening ? <>Stop 🔴 </> : <> Start 🎤</>}\r\n                </button>\r\n              </h4>\r\n              <p class=\"card-text\"> {note}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"card border-secondary mb-3\" style={{ maxWidth: '40rem' }}>\r\n            <div class=\"card-header\">SAVED NOTES</div>\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">All your notes are down below</h4>\r\n              <p class=\"card-text\">\r\n                {savedNotes.map((x) => (\r\n                  <li key={x}>{x}</li>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpeechToNote;\r\n","import React, { useState } from 'react';\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\nfunction TextToSpeech() {\r\n  const [val, setVal] = useState('');\r\n  const [rate, setRate] = useState(1);\r\n\r\n  const [voiceIndex, setVoiceIndex] = useState(null);\r\n\r\n  const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis();\r\n\r\n  const voice = voices[voiceIndex] || null;\r\n  return (\r\n    <div class=\" my-3\" style={{ margin: 'auto 0', textAlign: 'center' }}>\r\n      <h2> Quit saying tl;dr, right now!</h2>\r\n      <div class=\"alert alert-dismissible alert-warning\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\r\n          &times;\r\n        </button>\r\n        <h4 class=\"alert-heading\"></h4>\r\n\r\n        <h4>\r\n          Do you wanna have someone read that humongous boring old\r\n          text/paragraph your friend sent you? <br></br> USE THIS\r\n        </h4>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <textarea\r\n              onChange={(e) => {\r\n                setVal(e.target.value);\r\n              }}\r\n              style={{ width: '100%', minHeight: '130px' }}\r\n              class=\"form-control\"\r\n            ></textarea>\r\n            <button\r\n              onClick={() => {\r\n                speak({ text: val, rate: rate, voice });\r\n              }}\r\n              class=\"my-2 mx-1 btn btn-warning\"\r\n            >\r\n              PLAY!\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <fieldset class=\"form-group my-4\">\r\n              <legend>Select how fast you wanna get it done with!(Rate)</legend>\r\n              <label for=\"customRange1\">Rate</label>\r\n              <input\r\n                style={{}}\r\n                type=\"range\"\r\n                class=\"custom-range\"\r\n                min=\"0\"\r\n                max=\"4\"\r\n                defaultValue=\"1\"\r\n                step=\"0.1\"\r\n                id=\"pitch\"\r\n                onChange={(event) => {\r\n                  setRate(event.target.value);\r\n                }}\r\n              />\r\n            </fieldset>\r\n            <legend>Select a cute little accent!</legend>\r\n            <select\r\n              id=\"voice\"\r\n              name=\"voice\"\r\n              value={voiceIndex || ''}\r\n              onChange={(event) => {\r\n                setVoiceIndex(event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\">Default</option>\r\n              {voices.map((option, index) => (\r\n                <option key={option.voiceURI} value={index}>\r\n                  {`${option.lang} - ${option.name}`}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextToSpeech;\r\n","import React, { useRef } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport * as bodyPix from '@tensorflow-models/body-pix';\r\nimport Webcam from 'react-webcam';\r\n\r\nfunction Segmentation() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const runBodysegment = async () => {\r\n    const net = await bodyPix.load();\r\n\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    if (\r\n      typeof webcamRef.current !== 'undefined' &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n      const person = await net.segmentPersonParts(video);\r\n      console.log(person);\r\n      const coloredPartImage = bodyPix.toColoredPartMask(person);\r\n      const opacity = 0.7;\r\n      const flipHorizontal = false;\r\n      const maskBlurAmount = 0;\r\n      const canvas = canvasRef.current;\r\n\r\n      bodyPix.drawMask(\r\n        canvas,\r\n        video,\r\n        coloredPartImage,\r\n        opacity,\r\n        maskBlurAmount,\r\n        flipHorizontal\r\n      );\r\n    }\r\n  };\r\n\r\n  runBodysegment();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: 'absolute',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: 'center',\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Segmentation;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { createWorker } from 'tesseract.js';\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\r\nimport 'filepond/dist/filepond.min.css';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nregisterPlugin(FilePondPluginImagePreview);\r\nconst worker = createWorker({\r\n  logger: (m) => console.log(m),\r\n});\r\nfunction Ocr() {\r\n  const [text, setText] = useState('');\r\n  //const [ocr, setOcr] = useState('');\r\n  const [val, setVal] = useState('');\r\n  let workerRef = useRef();\r\n  let pondRef = useRef();\r\n\r\n  async function setOcr(File) {\r\n    await worker.load();\r\n    await worker.loadLanguage('eng');\r\n    await worker.initialize('eng');\r\n\r\n    const {\r\n      data: { text },\r\n    } = await worker.recognize(File.file);\r\n    setText(text);\r\n    setVal(text);\r\n  }\r\n  const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis();\r\n  return (\r\n    <div class=\"my-5\" style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <div class=\"container\">\r\n        <div class=\"alert alert-dismissible alert-info\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"alert\">\r\n            &times;\r\n          </button>\r\n          <strong>Hold up!</strong>{' '}\r\n          <h3>Wanna read out that boring old long message?</h3>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <FilePond\r\n              ref={pondRef}\r\n              onremovefile={(err, file) => {\r\n                setOcr('');\r\n              }}\r\n              onaddfile={(err, file) => {\r\n                setOcr(file);\r\n              }}\r\n            ></FilePond>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <textarea\r\n              style={{ minHeight: '120px' }}\r\n              disabled\r\n              value={text}\r\n              class=\"form-control\"\r\n            ></textarea>\r\n\r\n            <button\r\n              onClick={() => {\r\n                speak({ text: val });\r\n              }}\r\n              class=\"my-2 mx-1 btn btn-secondary\"\r\n            >\r\n              PLAY!\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ocr;\r\n","import React, { useState, useEffect } from 'react';\nimport './bootstrap.min.css';\nimport Nav from './comp/Nav';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './screens/HomePage';\nimport ObjectDetection from './screens/ObjectDetection';\nimport SpeechToNote from './screens/SpeechToNote';\nimport TextToSpeech from './screens/TextToSpeech';\nimport Segmentation from './screens/Segmentation';\nimport Ocr from './screens/Ocr';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Nav></Nav>\n        <Route exact path=\"/home\" component={HomePage}></Route>\n        <Route path=\"/speechtonote\" component={SpeechToNote}></Route>\n        <Route exact path=\"/objdetect\" component={ObjectDetection}></Route>\n        <Route exact path=\"/texttospeech\" component={TextToSpeech}></Route>\n        <Route exact path=\"/segmentation\" component={Segmentation}></Route>\n        <Route exact path=\"/ocr\" component={Ocr}></Route>\n        <Route\n          exact\n          path=\"/faizii992.github.io/objdetect\"\n          component={ObjectDetection}\n        ></Route>\n        <Route\n          exact\n          path=\"/faizii992.github.io\"\n          component={SpeechToNote}\n        ></Route>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Extra.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
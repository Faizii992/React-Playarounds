{"version":3,"sources":["comp/Nav.js","screens/ObjectDetection.js","screens/SpeechToNote.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","placeholder","ObjectDetection","drawRect","detections","ctx","forEach","prediction","console","log","x","y","width","height","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","CanvasRef","useRef","WebcamRef","useEffect","runCoco","a","cocossd","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","style","textAlign","muted","ref","position","top","left","zindex","mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","SpeechToNote","useState","isListening","setIsListening","note","setNote","savedNotes","setSavedNotes","start","onend","stop","onstart","onresult","event","transcript","Array","from","results","map","result","join","onerror","error","HandleListen","className","maxWidth","onClick","disabled","prevState","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a50dd2c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Nav() {\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n          Home\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarColor02\"\r\n          aria-controls=\"navbarColor02\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <Link to=\"/\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Speech To Note\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n              <Link to=\"/objdetect\">\r\n                <a class=\"nav-link\" href=\"#\">\r\n                  Object Detection\r\n                  <span class=\"sr-only\">(current)</span>\r\n                </a>\r\n              </Link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                Features\r\n              </a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <form class=\"form-inline my-2 my-lg-0\">\r\n          <input\r\n            class=\"form-control mr-sm-2\"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n          ></input>\r\n          <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </form>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport Webcam from 'react-webcam';\r\nimport * as cocossd from '@tensorflow-models/coco-ssd';\r\n\r\nfunction ObjectDetection() {\r\n  const drawRect = (detections, ctx) => {\r\n    // Loop through each prediction\r\n    detections.forEach((prediction) => {\r\n      // Extract boxes and classes\r\n      console.log(prediction);\r\n      const [x, y, width, height] = prediction['bbox'];\r\n      const text = prediction['class'];\r\n\r\n      // Set styling\r\n      const color = Math.floor(Math.random() * 16777215).toString(16);\r\n      ctx.strokeStyle = '#' + color;\r\n      ctx.font = '28px Arial';\r\n\r\n      // Draw rectangles and text\r\n      ctx.beginPath();\r\n      ctx.fillStyle = '#' + color;\r\n      ctx.fillText(text, x, y);\r\n      ctx.rect(x, y, width, height);\r\n      ctx.stroke();\r\n    });\r\n  };\r\n  const CanvasRef = useRef(null);\r\n  const WebcamRef = useRef(null);\r\n  useEffect(() => {\r\n    runCoco();\r\n  }, []);\r\n  const runCoco = async () => {\r\n    const net = await cocossd.load();\r\n    console.log('detected');\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n  const detect = async (net) => {\r\n    if (\r\n      WebcamRef.current.video.readyState == 4 &&\r\n      WebcamRef.current != null &&\r\n      typeof WebcamRef.current != 'undefined'\r\n    ) {\r\n      console.log(WebcamRef.current.video.videoWidth);\r\n      console.log(WebcamRef.current.video.width);\r\n      WebcamRef.current.video.width = WebcamRef.current.video.videoWidth;\r\n\r\n      WebcamRef.current.video.height = WebcamRef.current.video.videoHeight;\r\n      CanvasRef.current.width = WebcamRef.current.video.width;\r\n      CanvasRef.current.height = WebcamRef.current.video.height;\r\n      const video = WebcamRef.current.video;\r\n      const obj = await net.detect(video);\r\n      const ctx = CanvasRef.current.getContext('2d');\r\n      drawRect(obj, ctx);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: 'center' }}>Object Detection</h3>\r\n      <Webcam\r\n        muted={true}\r\n        ref={WebcamRef}\r\n        style={{\r\n          width: '50%',\r\n          position: 'absolute',\r\n          top: '20%',\r\n          left: '20%',\r\n          zindex: '8',\r\n        }}\r\n      ></Webcam>\r\n\r\n      <canvas\r\n        ref={CanvasRef}\r\n        style={{\r\n          width: '50%',\r\n          position: 'absolute',\r\n          top: '20%',\r\n          left: '20%',\r\n          zindex: '7',\r\n        }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ObjectDetection;\r\n","import React, { useState, useEffect } from 'react';\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst mic = new SpeechRecognition();\r\n\r\nmic.continuous = true;\r\nmic.interimResults = true;\r\nmic.lang = 'en-US';\r\nfunction SpeechToNote() {\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [note, setNote] = useState(null);\r\n  const [savedNotes, setSavedNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    HandleListen();\r\n  }, [isListening]);\r\n  function HandleListen() {\r\n    if (isListening) {\r\n      mic.start();\r\n      mic.onend = () => {\r\n        console.log('mic is on');\r\n        mic.start();\r\n      };\r\n    } else {\r\n      mic.stop();\r\n      mic.onend = () => {\r\n        console.log('mic is stopping');\r\n      };\r\n    }\r\n    mic.onstart = () => {\r\n      console.log('conclusion');\r\n    };\r\n    mic.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map((result) => result[0])\r\n        .map((result) => result.transcript)\r\n        .join('');\r\n      console.log(transcript);\r\n      setNote(transcript);\r\n      mic.onerror = (event) => {\r\n        console.log(event.error);\r\n      };\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: 'center' }}>\r\n        <u>SPEECH TO NOTES WITH REACT</u>\r\n      </h2>\r\n      <div class=\"alert alert-success\" style={{ textAlign: 'center' }}>\r\n        Hit \"Start\", say what you wanna record. Once you're done, hit Stop and\r\n        then hit \"save note\" if you wanna save it\r\n      </div>\r\n      <h1 className=\"my-3\">Voice Notes</h1>\r\n      <div className=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"card border-primary mb-3\" style={{ maxWidth: '30rem' }}>\r\n            <div class=\"card-header\">Current Note</div>\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">\r\n                {' '}\r\n                <button\r\n                  onClick={() => {\r\n                    setSavedNotes([...savedNotes, note]);\r\n                    setNote('');\r\n                  }}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary\"\r\n                  disabled={!note}\r\n                >\r\n                  Save new note\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-secondary\"\r\n                  onClick={() => {\r\n                    setIsListening((prevState) => !prevState);\r\n                  }}\r\n                >\r\n                  {isListening ? <>Stop 🔴 </> : <> Start 🎤</>}\r\n                </button>\r\n              </h4>\r\n              <p class=\"card-text\"> {note}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"card border-secondary mb-3\" style={{ maxWidth: '40rem' }}>\r\n            <div class=\"card-header\">SAVED NOTES</div>\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">All your notes are down below</h4>\r\n              <p class=\"card-text\">\r\n                {savedNotes.map((x) => (\r\n                  <li key={x}>{x}</li>\r\n                ))}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpeechToNote;\r\n","import React, { useState, useEffect } from 'react';\nimport './bootstrap.min.css';\nimport Nav from './comp/Nav';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport ObjectDetection from './screens/ObjectDetection';\nimport SpeechToNote from './screens/SpeechToNote';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Nav></Nav>\n        <Route exact path=\"/\" component={SpeechToNote}></Route>\n        <Route exact path=\"/objdetect\" component={ObjectDetection}></Route>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}